version: 2
jobs:
  build:
    parallelism: 3
    working_directory: ~/personal-finance
    docker:
      - image: circleci/ruby:2.5-node-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: circleci
          RAILS_ENV: test
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: personal-finance_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - personal-finance-bundle-v2-{{ checksum "Gemfile.lock" }}
            - personal-finance-bundle-v2-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: personal-finance-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - personal-finance-yarn-{{ checksum "yarn.lock" }}
            - personal-finance-yarn-

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: personal-finance-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      # Database setup
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      # Run rspec in parallel
      - run:
          name: rspec
          command: |
            bundle exec rspec \
              --format progress
      # Run reek
      - run:
          name: reek
          command: bundle exec reek

      # Run rubocop
      - run:
          name: rubocop
          command: bundle exec rubocop

      # Save test results for timing analysis
      - store_test_results:
          path: test_results
